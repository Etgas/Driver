// Generated by Dagger (https://google.github.io/dagger).
package com.generalmobile.app.driverexample.di.module;

import com.generalmobile.app.driverexample.service.driverApi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class NetModule_ProviceServiceFactory implements Factory<driverApi> {
  private final NetModule module;

  private final Provider<Retrofit.Builder> retrofitProvider;

  public NetModule_ProviceServiceFactory(
      NetModule module, Provider<Retrofit.Builder> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public driverApi get() {
    return Preconditions.checkNotNull(
        module.proviceService(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static NetModule_ProviceServiceFactory create(
      NetModule module, Provider<Retrofit.Builder> retrofitProvider) {
    return new NetModule_ProviceServiceFactory(module, retrofitProvider);
  }

  public static driverApi proxyProviceService(NetModule instance, Retrofit.Builder retrofit) {
    return Preconditions.checkNotNull(
        instance.proviceService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
